/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    /** Make a new grant request */
    post: operations['post']
    parameters: {}
  }
  '/continue/{id}': {
    /** Continue a grant request during or after user interaction. */
    post: operations['post-continue']
    /** Cancel a grant request or delete a grant client side. */
    delete: operations['delete-continue']
    parameters: {
      path: {
        id: string
      }
    }
  }
  '/token/{id}': {
    /** Management endpoint to rotate access token. */
    post: operations['post-token']
    /** Management endpoint to revoke access token. */
    delete: operations['delete-token']
    parameters: {
      path: {
        id: string
      }
    }
  }
  '/introspect': {
    /** Introspect an access token to get grant details. */
    post: operations['post-introspect']
    parameters: {}
  }
  '/interact/{id}/{nonce}': {
    /** To start the user interaction for grant approval, this endpoint redirects to identity server for authentication of the user. */
    get: operations['get-interact']
  }
  '/interact/{id}/{nonce}/finish': {
    /** To finish the user interaction for grant approval, this endpoint redirects to the client's finish url. */
    get: operations['get-finish-interaction']
  }
  '/grant/{id}/{nonce}': {
    /** Retrieve the grant associated with the provided interactId */
    get: operations['get-grant']
  }
  '/grant/{id}/{nonce}/{choice}': {
    /** Submit the RO's consent choice for a particular grant */
    post: operations['post-grant-choice']
  }
}

export interface components {
  schemas: {
    /** @description The access associated with the access token is described using objects that each contain multiple dimensions of access. */
    'access':
      | components['schemas']['access-incoming']
      | components['schemas']['access-outgoing']
      | components['schemas']['access-quote']
    /**
     * limits-outgoing-recurring
     * @description Open Payments specific property that defines the limits under which outgoing payments can be created.
     */
    'limits-outgoing-recurring': {
      /**
       * Format: uri
       * @description URL for the incoming payment or ILP STREAM Connection.
       */
      receiver?: string
      sendAmount: components['schemas']['amount']
      receiveAmount: components['schemas']['amount']
      /** @description [ISO8601 repeating interval](https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals) */
      interval: string
    } & {
      oneOf: unknown
    }
    /**
     * limits-outgoing
     * @description Open Payments specific property that defines the limits under which outgoing payments can be created.
     */
    'limits-outgoing': {
      /**
       * Format: uri
       * @description URL for the incoming payment or ILP STREAM Connection.
       */
      receiver?: string
      sendAmount?: components['schemas']['amount']
      receiveAmount?: components['schemas']['amount']
      /** @description [ISO8601 repeating interval](https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals) */
      interval?: string
    }
    /**
     * amount
     * @description All amounts are maxima, i.e. multiple payments can be created under a grant as long as the total amounts of these payments do not exceed the maximum amount per interval as specified in the grant.
     */
    'amount': {
      /**
       * Format: uint64
       * @description The value is an unsigned 64-bit integer amount, represented as a string.
       */
      value: string
      /** @description The assetCode is a code that indicates the underlying asset. In most cases this SHOULD be a 3-character ISO 4217 currency code. */
      assetCode: string
      /** @description The assetScale indicates how the value has been scaled relative to the natural scale of the asset. For example, an value of "1234" with an assetScale of 2 represents an amount of 12.34. */
      assetScale: number
    }
    /**
     * client
     * @description Describes the client instance that is making this request, including the key that the client instance will use to protect this request and any continuation requests at the AS and any user-facing information about the client instance used in interactions.
     *
     * When sending a non-continuation request to the AS, the client instance MUST identify itself by including the client field of the request and by signing the request.
     */
    'client': {
      /** @description An object containing additional information that the AS MAY display to the RO during interaction, authorization, and management. */
      display?: {
        name?: string
        /** Format: uri */
        uri?: string
      }
      /** @description An identifier string that the AS can use to identify the client software comprising this client instance. */
      client_id?: string
      /** @description The public key of the client instance to be used in this request or a reference to a key. */
      key?: components['schemas']['key'] | string
    }
    /**
     * key
     * @description A key presented by value MUST be a public key.
     */
    'key': {
      /**
       * @description The form of proof that the client instance will use when presenting the key.
       * @enum {string}
       */
      proof: 'httpsig'
      /** @description The public key and its properties represented as a JSON Web Key [[RFC7517](https://datatracker.ietf.org/doc/html/rfc7517)]. */
      jwk: {
        /**
         * @description The cryptographic algorithm family used with the key. The only allowed value is `EdDSA`.
         * @enum {string}
         */
        alg: 'EdDSA'
        /** @description A Key ID can be used to match a specific key. */
        kid?: string
        /**
         * @description The Key Type. The only allowed value is `OKP`.
         * @enum {string}
         */
        kty: 'OKP'
        /**
         * @description The intended use of the key.
         * @enum {string}
         */
        use?: 'sig'
        /**
         * @description The cryptographic curve used with the key. The only allowed value is `Ed25519`.
         * @enum {string}
         */
        crv: 'Ed25519'
        /** @description Public key encoded using the `base64url` encoding. */
        x: string
        /** @description Array of allowed operations this key may be used for. */
        key_ops?: ('sign' | 'verify')[]
        /** @description UNIX timestamp indicating the earliest this key may be used. */
        nbf?: number
        /** @description UNIX timestamp indicating the latest this key may be used. */
        exp?: number
        /** @description The revocation status of the key. */
        revoked?: boolean
      }
    }
    /**
     * interact
     * @description The client instance declares the parameters for interaction methods that it can support using the interact field.
     */
    'interact-request': {
      /** @description Indicates how the client instance can start an interaction. */
      start: 'redirect'[]
      /** @description Indicates how the client instance can receive an indication that interaction has finished at the AS. */
      finish?: {
        /**
         * @description The callback method that the AS will use to contact the client instance.
         * @enum {string}
         */
        method: 'redirect'
        /**
         * Format: uri
         * @description Indicates the URI that the AS will either send the RO to after interaction or send an HTTP POST request.
         */
        uri: string
        /** @description Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI, must be sufficiently random to be unguessable by an attacker.  MUST be generated by the client instance as a unique value for this request. */
        nonce: string
      }
    }
    /** interact-response */
    'interact-response': {
      /**
       * Format: uri
       * @description The URI to direct the end user to.
       */
      redirect: string
      /** @description Unique key to secure the callback. */
      finish: string
    }
    /**
     * continue
     * @description If the AS determines that the request can be continued with additional requests, it responds with the continue field.
     */
    'continue': {
      /** @description A unique access token for continuing the request, called the "continuation access token". */
      access_token: {
        value: string
      }
      /**
       * Format: uri
       * @description The URI at which the client instance can make continuation requests.
       */
      uri: string
      /** @description The amount of time in integer seconds the client instance MUST wait after receiving this request continuation response and calling the continuation URI. */
      wait?: number
    }
    /**
     * access_token
     * @description A single access token or set of access tokens that the client instance can use to call the RS on behalf of the RO.
     */
    'access_token': {
      /** @description The value of the access token as a string.  The value is opaque to the client instance.  The value SHOULD be limited to ASCII characters to facilitate transmission over HTTP headers within other protocols without requiring additional encoding. */
      value: string
      /**
       * Format: uri
       * @description The management URI for this access token. This URI MUST NOT include the access token value and SHOULD be different for each access token issued in a request.
       */
      manage: string
      /** @description The number of seconds in which the access will expire.  The client instance MUST NOT use the access token past this time.  An RS MUST NOT accept an access token past this time. */
      expires_in?: number
      /** @description A description of the rights associated with this access token. */
      access: components['schemas']['access'][]
    }
    /** access-outgoing */
    'access-outgoing': {
      /**
       * @description The type of resource request as a string.  This field defines which other fields are allowed in the request object.
       * @enum {string}
       */
      type: 'outgoing-payment'
      /** @description The types of actions the client instance will take at the RS as an array of strings. */
      actions: ('create' | 'read' | 'read-all' | 'list' | 'list-all')[]
      /**
       * Format: uri
       * @description A string identifier indicating a specific resource at the RS.
       */
      identifier: string
      limits?:
        | components['schemas']['limits-outgoing']
        | components['schemas']['limits-outgoing-recurring']
    }
    /** access-incoming */
    'access-incoming': {
      /**
       * @description The type of resource request as a string.  This field defines which other fields are allowed in the request object.
       * @enum {string}
       */
      type: 'incoming-payment'
      /** @description The types of actions the client instance will take at the RS as an array of strings. */
      actions: ('create' | 'complete' | 'read' | 'read-all' | 'list' | 'list-all')[]
      /**
       * Format: uri
       * @description A string identifier indicating a specific resource at the RS.
       */
      identifier?: string
    }
    /** access-quote */
    'access-quote': {
      /**
       * @description The type of resource request as a string.  This field defines which other fields are allowed in the request object.
       * @enum {string}
       */
      type: 'quote'
      /** @description The types of actions the client instance will take at the RS as an array of strings. */
      actions: ('create' | 'read')[]
    }
  }
}

export interface operations {
  /** Make a new grant request */
  'post': {
    parameters: {}
    responses: {
      /** OK */
      200: {
        content: {
          'application/json':
            | {
                interact: components['schemas']['interact-response']
                continue: components['schemas']['continue']
              }
            | {
                access_token: components['schemas']['access_token']
                continue: components['schemas']['continue']
              }
        }
      }
      /** Bad Request */
      400: unknown
    }
    requestBody: {
      content: {
        'application/json': {
          access_token: {
            /** @description Describes the rights that the client instance is requesting for one or more access tokens to be used at RS's. Each access type must only be represented once within the access array. */
            access: components['schemas']['access'][]
          }
          client: components['schemas']['client']
          interact?: components['schemas']['interact-request']
        }
      }
    }
  }
  /** Continue a grant request during or after user interaction. */
  'post-continue': {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** Success */
      200: {
        content: {
          'application/json': {
            access_token?: components['schemas']['access_token']
            continue: components['schemas']['continue']
          }
        }
      }
      /** Unauthorized */
      401: unknown
      /** Not Found */
      404: unknown
    }
    requestBody: {
      content: {
        'application/json': {
          /**
           * @description The interaction reference generated for this
           * interaction by the AS.
           */
          interact_ref: string
        }
      }
    }
  }
  /** Cancel a grant request or delete a grant client side. */
  'delete-continue': {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** Accepted */
      202: unknown
      /** Unauthorized */
      401: unknown
      /** Not Found */
      404: unknown
    }
  }
  /** Management endpoint to rotate access token. */
  'post-token': {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': {
            access_token: components['schemas']['access_token']
          }
        }
      }
      /** Unauthorized */
      401: unknown
      /** Not Found */
      404: unknown
    }
  }
  /** Management endpoint to revoke access token. */
  'delete-token': {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** No Content */
      204: never
      /** Unauthorized */
      401: unknown
    }
  }
  /** Introspect an access token to get grant details. */
  'post-introspect': {
    parameters: {}
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': {
            active: boolean
            grant?: string
            access?: components['schemas']['access'][]
            key?: components['schemas']['key']
            /** @description Opaque client identifier. */
            client_id?: string
          }
        }
      }
      /** Not Found */
      404: unknown
    }
    requestBody: {
      content: {
        'application/json': {
          /** @description The access token value presented to the RS by the client instance. */
          access_token: string
          /** @description The proofing method used by the client instance to bind the token to the RS request. */
          proof?: string
          /** @description The identification used to authenticate the resource server making this call, either by value or by reference. */
          resource_server: components['schemas']['key'] | string
          /** @description The minimum access rights required to fulfill the request. */
          access?: components['schemas']['access'][]
        }
      }
    }
  }
  /** To start the user interaction for grant approval, this endpoint redirects to identity server for authentication of the user. */
  'get-interact': {
    parameters: {
      path: {
        /** Interaction id */
        id: string
        /** Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI, must be sufficiently random to be unguessable by an attacker.  MUST be generated by the client instance as a unique value for this request. */
        nonce: string
      }
    }
    responses: {
      /** Found */
      302: never
    }
  }
  /** To finish the user interaction for grant approval, this endpoint redirects to the client's finish url. */
  'get-finish-interaction': {
    parameters: {
      path: {
        /** Interaction id */
        id: string
        /** Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI, must be sufficiently random to be unguessable by an attacker.  MUST be generated by the client instance as a unique value for this request. */
        nonce: string
      }
    }
    responses: {
      /** Found */
      302: never
    }
  }
  /** Retrieve the grant associated with the provided interactId */
  'get-grant': {
    parameters: {
      path: {
        /** Interaction id */
        id: string
        /** Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI, must be sufficiently random to be unguessable by an attacker.  MUST be generated by the client instance as a unique value for this request. */
        nonce: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': {
            access?: components['schemas']['access'][]
          }
        }
      }
      /** Not Found */
      404: unknown
    }
  }
  /** Submit the RO's consent choice for a particular grant */
  'post-grant-choice': {
    parameters: {
      path: {
        /** Interaction id */
        id: string
        /** Unique value to be used in the calculation of the "hash" query parameter sent to the callback URI, must be sufficiently random to be unguessable by an attacker.  MUST be generated by the client instance as a unique value for this request. */
        nonce: string
        /** Indicates the consent choice for a grant (i.e. acceptance or rejection) */
        choice: 'accept' | 'reject'
      }
    }
    responses: {
      /** Accepted */
      202: unknown
      /** Unauthorized */
      401: unknown
      /** Not Found */
      404: unknown
    }
  }
}

export interface external {}
